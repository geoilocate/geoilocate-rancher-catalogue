version: '2'
services:

  db:
    image: geonode/postgis:10
    restart: unless-stopped
    container_name: db4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: db
        org.geonode.instance.name: geonode
        # io.rancher.container.pull_image: always
    volumes:
      - dbdata:/var/lib/postgresql/data
      - dbbackups:/pg_backups
    # env_file:
    #   - /media/sindile/ExternalHD3/gitrepo/geonode/geonode/scripts/docker/env/production/db.env
    environment:
      GEONODE_DATABASE: geonode
      GEONODE_DATABASE_PASSWORD: geonode
      GEONODE_GEODATABASE: geonode_data
      GEONODE_GEODATABASE_PASSWORD: geonode_data
  
  geoserver:
    image: geonode/geoserver:2.15.2
    restart: unless-stopped
    container_name: geoserver4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: geoserver
        org.geonode.instance.name: geonode
        # io.rancher.container.pull_image: always
    # depends_on:
    links:
      - db
      - data-dir-conf
    volumes:
      - geoserver-data-dir:/geoserver_data/data
    # env_file:
    #   - /media/sindile/ExternalHD3/gitrepo/geonode/geonode/scripts/docker/env/production/geoserver.env
    environment:
      GEOSERVER_ADMIN_PASSWORD: ${GEOSERVER_ADMIN_PASSWORD}
      DOCKERHOST:
      DOCKER_HOST_IP:
      GEONODE_LB_HOST_IP:
      GEONODE_LB_PORT:
      # PUBLIC_PORT: 80
      NGINX_BASE_URL: http://${SITEURL}/
      GEOSERVER_JAVA_OPTS: -Djava.awt.headless=true -XX:MaxPermSize=512m -XX:PermSize=256m -Xms512m -Xmx2048m -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ParallelGCThreads=4 -Dfile.encoding=UTF8 -Duser.timezone=GMT -Djavax.servlet.request.encoding=UTF-8 -Djavax.servlet.response.encoding=UTF-8 -Duser.timezone=GMT -Dorg.geotools.shapefile.datetime=true

  django:
    restart: unless-stopped
    image: geonode/geonode:latest
    container_name: django4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: django
        org.geonode.instance.name: geonode
        # io.rancher.container.pull_image: always
    links:
      - db
      - data-dir-conf
    # command: paver start_django -b 0.0.0.0:8000
    # command: uwsgi --ini uwsgi.ini
    volumes:
      - statics:/mnt/volumes/statics
      - geoserver-data-dir:/geoserver_data/data
    # env_file:
    #   - /media/sindile/ExternalHD3/gitrepo/geonode/geonode/scripts/docker/env/production/django.env
    environment:
      DJANGO_SETTINGS_MODULE: geonode.settings
      GEONODE_INSTANCE_NAME: geonode
      GEONODE_LB_HOST_IP:
      GEONODE_LB_PORT:
      DEFAULT_BACKEND_DATASTORE: datastore
      GEONODE_DATABASE: geonode
      GEONODE_DATABASE_PASSWORD: geonode
      GEONODE_GEODATABASE: geonode_data
      GEONODE_GEODATABASE_PASSWORD: geonode_data
      ASYNC_SIGNALS: 'False'
      BROKER_URL: amqp://guest:guest@rabbitmq:5672
      DOCKER_ENV: production
      UWSGI_CMD: uwsgi --ini /usr/src/app/uwsgi.ini
      IS_CELERY: false
      C_FORCE_ROOT: 1
      SITEURL:  http://${SITEURL}/
    # replaced with defaults in settings
      GEOSERVER_PUBLIC_LOCATION: http://${SITEURL}/geoserver/
      GEOSERVER_WEB_UI_LOCATION: http://${SITEURL}/geoserver/
      GEOSERVER_LOCATION: http://geoserver:8080/geoserver/
      OGC_REQUEST_TIMEOUT: 300
      STATIC_ROOT: /mnt/volumes/statics/static/
      MEDIA_ROOT: /mnt/volumes/statics/uploaded/
      GEOIP_PATH: /mnt/volumes/statics/geoip.db
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      ADMIN_EMAILS:
      DEFAULT_BACKEND_UPLOADER: geonode.importer
      TIME_ENABLED: True
      MOSAIC_ENABLED: False
#       HAYSTACK_SEARCH: False
#       HAYSTACK_ENGINE_URL: http://elasticsearch:9200/
#       HAYSTACK_ENGINE_INDEX_NAME: haystack
#       HAYSTACK_SEARCH_RESULTS_PER_PAGE: 200
      ALLOWED_DOCUMENT_TYPES: '['doc', 'docx', 'gif', 'jpg', 'jpeg', 'ods', 'odt', 'odp', 'pdf', 'png','ppt', 'pptx', 'rar', 'sld', 'tif', 'tiff', 'txt', 'xls', 'xlsx', 'xml', 'zip', 'gz', 'qml']'
      MAX_DOCUMENT_SIZE: 2
    # GEOSERVER_ADMIN_PASSWORD=admin
    # See https://github.com/geosolutions-it/geonode-generic/issues/28
    # to see why we force API version to 1.24
      DOCKER_API_VERSION: "1.24"

  geonode:
    image: geonode/nginx:production
    restart: unless-stopped
    container_name: nginx4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: nginx
        org.geonode.instance.name: geonode
        # io.rancher.container.pull_image: always
    links:
      - django
      - geoserver
    ports:
      # - "81:80"
      - "${NGINX_PORT_MAPPING}"
    volumes:
      - statics:/mnt/volumes/statics

  data-dir-conf:
    image: geonode/geoserver_data:2.15.2
    restart: on-failure
    container_name: gsconf4${COMPOSE_PROJECT_NAME}
    labels:
        org.geonode.component: conf
        org.geonode.instance.name: geonode
        # io.rancher.container.pull_image: always
    command: /bin/true
    volumes:
      - geoserver-data-dir:/geoserver_data/data

volumes:
  statics:
    name: geonode-statics
  geoserver-data-dir:
    name: geonode-gsdatadir
  dbdata:
    name: geonode-dbdata
  dbbackups:
    name: geonode-dbbackups
  rabbitmq:
    name: geonode-rabbitmq
